parser code {:
        
    private Pila errores = new Pila();    

    public parserUsuario(lexer lex){
        super(lex);
    }

    public void report_error(String message, Object info){
        System.out.println("reporterror");
    }
    public void report_fatal_error(String message, Object info){
        System.out.println("reportfatal");
    }

    public void syntax_error(Symbol cur_token){
        /*
        token tok = (token) cur_token.value;
        String err = "Parametro inesperado \""+tok.getLexeme()+"\" se esperaba[";
        for (int i = 0; i < expected_token_ids().size(); i++) {
            if (!traductorError.tokenEsperado(expected_token_ids().get(i)).equals("")) {
                err = err + traductorError.tokenEsperado(expected_token_ids().get(i));
                if (i < (expected_token_ids().size() - 1)) {
                    err = err + " รณ ";
                }
            }
        }
        err = err +"] Linea: "+tok.getLine()+",Columna: "+tok.getColumn();
        System.out.println(err);
        errores.push(err);
        */
    }

    protected int error_sync_size() {
        return 1;
    }

    public Pila getErrores(){
        return errores;
    }

    public AVL getUsuarios(){
        return usuarios;
    }

:}

terminal    USER,ID,D_DOT,COMA,DOT_COMA;
non terminal s,sp,cont,cont2,contenido;

s   ::= USER:e1 D_DOT contenido:e2 DOT_COMA sp
    |   error
    ;

sp  ::= s
    |
    ;

contenido ::=   cont:e1
            |   
            ;

cont    ::= ID:e1 cont2:e2
        |   error
        ;

cont2   ::= COMA cont:e1
        |
        |   error
        ;